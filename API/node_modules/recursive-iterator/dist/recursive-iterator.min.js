/*
 recursive-iterator v2.0.1
 https://github.com/nervgh/recursive-iterator
*/

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.RecursiveIterator=t():e.RecursiveIterator=t()}(this,function(){return function(e){function t(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return e[i].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";var i=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},n=function(e,t,r){t&&Object.defineProperties(e,t),r&&Object.defineProperties(e.prototype,r)},o=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},u=r(1),a=u.isObject,s=u.getKeys,f="__bypassMode",c="__ignoreCircular",l="__maxDeep",h="__cache",d="__queue",p="__state",v={},b=function(){function e(t){var r=void 0===arguments[1]?0:arguments[1],i=void 0!==arguments[2]&&arguments[2],n=void 0===arguments[3]?100:arguments[3];o(this,e),this[f]=r,this[c]=i,this[l]=n,this[h]=[],this[d]=[],this[p]=this.getState(void 0,t),this.__makeIterable()}return n(e,null,{next:{value:function(){var e=this[p]||v,t=e.node,r=e.path,n=e.deep;if(this[l]>n&&this.isNode(t))if(this.isCircular(t)){if(!this[c])throw new Error("Circular reference")}else if(this.onStepInto(this[p])){var o,u=this.getStatesOfChildNodes(t,r,n),a=this[f]?"push":"unshift";(o=this[d])[a].apply(o,i(u)),this[h].push(t)}var s=this[d].shift(),b=!s;return this[p]=s,b&&this.destroy(),{value:s,done:b}},writable:!0,configurable:!0},destroy:{value:function(){this[d].length=0,this[h].length=0,this[p]=null},writable:!0,configurable:!0},isNode:{value:function(e){return a(e)},writable:!0,configurable:!0},isLeaf:{value:function(e){return!this.isNode(e)},writable:!0,configurable:!0},isCircular:{value:function(e){return this[h].indexOf(e)!==-1},writable:!0,configurable:!0},getStatesOfChildNodes:{value:function(e,t,r){var i=this;return s(e).map(function(n){return i.getState(e,e[n],n,t.concat(n),r+1)})},writable:!0,configurable:!0},getState:{value:function(e,t,r){var i=void 0===arguments[3]?[]:arguments[3],n=void 0===arguments[4]?0:arguments[4];return{parent:e,node:t,key:r,path:i,deep:n}},writable:!0,configurable:!0},onStepInto:{value:function(e){return!0},writable:!0,configurable:!0},__makeIterable:{value:function(){var e=this;try{this[Symbol.iterator]=function(){return e}}catch(t){}},writable:!0,configurable:!0}}),e}();e.exports=b},function(e,t){"use strict";function r(e){return null!==e&&"object"==typeof e}function i(e){if(!r(e))return!1;if(!("length"in e))return!1;var t=e.length;if(!n(t))return!1;if(t>0)return t-1 in e;for(var i in e)return!1}function n(e){return"number"==typeof e}function o(e){var t=Object.keys(e);if(u(e));else if(i(e)){var r=t.indexOf("length");r>-1&&t.splice(r,1)}else t=t.sort();return t}t.isObject=r,t.isArrayLike=i,t.isNumber=n,t.getKeys=o;var u=t.isArray=Array.isArray;Object.defineProperty(t,"__esModule",{value:!0})}])});
//# sourceMappingURL=recursive-iterator.min.js.map